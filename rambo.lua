do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (4==v0) then v16=function(v18,v19,...)local v27=1;local v28;v18=v5(v4(v18,5),"..",function(v29)if (v2(v29,2)==79) then local v81=0;while true do if (v81==0) then v28=v1(v4(v29,1,1));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v3(v1(v29,16));if v28 then local v106=v6(v83,v28);v28=nil;return v106;else return v83;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v84=1864 -(1487 + 377) ;local v85;while true do if (v84==(228 -(46 + 182))) then v85=(v31/((2 + 0)^(v32-(1 + 0 + 0))))%(2^(((v33-(2 -1)) -(v32-(1738 -(309 + 1428)))) + (2 -1))) ;return v85-(v85%1) ;end end else local v86=(4 -2)^(v32-1) ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or (1708 -(1248 + 460)) ;end end local function v34()local v47=v2(v18,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v18,v27,v27 + (1720 -(950 + 768)) );v27=v27 + (1435 -(1190 + 243)) ;return (v49 * 256) + v48 ;end local function v36()local v50,v51,v52,v53=v2(v18,v27,v27 + 2 + (1551 -(707 + 843)) );v27=v27 + 1 + 2 + 1 ;return (v53 * 16777216) + (v52 * (66626 -(160 + 930))) + (v51 * (680 -424)) + v50 ;end local function v37()local v54=v36();local v55=v36();local v56=1 + (120 -(10 + 110)) ;local v57=(v30(v55,1 -0 ,1277 -(322 + 487 + 448) ) * ((1 + 1)^((38 -(12 + 10)) + 16))) + v54 ;local v58=v30(v55,1 + 20 ,31);local v59=((v30(v55,92 -60 )==(1 + 0)) and  -(2 -(3 -2))) or ((719 -(679 + 39)) + 0) ;if (v58==0) then if (v57==(0 + 0)) then return v59 * (0 -(1318 -(1197 + 121))) ;else v58=1;v56=(2869 -993) -(1858 + 18) ;end elseif (v58==(3333 -(1098 + 188))) then return ((v57==((131 -(121 + 10)) + 0)) and (v59 * ((1 + 0)/(0 + 0)))) or (v59 * NaN) ;end return v9(v59,v58-(938 + (2060 -(1012 + 963))) ) * (v56 + (v57/((1 + 1)^52))) ;end local function v38(v39)local v60;if  not v39 then v39=v36();if (v39==(545 -(488 + 57))) then return "";end end v60=v4(v18,v27,(v27 + v39) -(1 -0) );v27=v27 + v39 ;local v61={};for v73=1, #v60 do v61[v73]=v3(v2(v4(v60,v73,v73)));end return v7(v61);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v62=0 -0 ;local v63;local v64;local v65;local v66;local v67;local v68;local v69;while true do if (v62==(1276 -(407 + 869))) then v63=449 -(184 + 265) ;v64=nil;v62=1;end if (v62==2) then v67=nil;v68=nil;v62=3;end if (v62==(1017 -(996 + 20))) then v65=nil;v66=nil;v62=263 -(97 + 164) ;end if (v62~=3) then else v69=nil;while true do if (v63==1) then local v97=0 -0 ;while true do if (v97==2) then v63=2;break;end if (v97==(0 + 0)) then v68=v36();v69={};v97=2 -1 ;end if (v97==(35 -(8 + 26))) then for v120=1 + 0 ,v68 do local v121=1448 -(336 + 1112) ;local v122;local v123;local v124;local v125;while true do if (v121==(1 -0)) then v124=nil;v125=nil;v121=2;end if (v121==(0 + 0)) then v122=0 + 0 ;v123=nil;v121=1 + 0 ;end if (v121==(2 + 0)) then while true do if (v122~=(0 + 0)) then else v123=1607 -(1092 + 515) ;v124=nil;v122=1 + 0 ;end if (v122~=1) then else v125=nil;while true do if ((1 -0)==v123) then if (v124==(1 + 0)) then v125=v34()~=(0 -0) ;elseif (v124==2) then v125=v37();elseif (v124==(7 -4)) then v125=v38();end v69[v120]=v125;break;end if (v123~=(0 -0)) then else local v135=0;while true do if ((676 -(543 + 132))~=v135) then else v123=1 + 0 ;break;end if (v135~=(0 + 0)) then else local v137=0 + 0 ;local v138;while true do if (v137~=0) then else v138=0 -0 ;while true do if (v138~=(0 -0)) then else local v219=0;while true do if (v219~=(922 -(471 + 451))) then else v124=v34();v125=nil;v219=1;end if (v219==(1 -0)) then v138=1 + 0 ;break;end end end if ((1901 -(528 + 1372))==v138) then v135=1;break;end end break;end end end end end end break;end end break;end end end v67[62 -(23 + 36) ]=v34();v97=1 + 1 ;end end end if (v63==(0 + 0)) then local v98=0 + 0 ;local v99;while true do if (v98==(179 -(31 + 148))) then v99=0 + 0 ;while true do if (v99~=(0 + 0)) then else v64={};v65={};v99=1881 -(1142 + 738) ;end if ((1 + 0)~=v99) then else v66={};v67={v64,v65,nil,v66};v99=1 + 1 ;end if (v99~=(2 + 0)) then else v63=1 + 0 ;break;end end break;end end end if (2==v63) then for v107=1343 -(1198 + 144) ,v36() do local v108=0 + 0 ;local v109;local v110;while true do if (v108==0) then v109=0;v110=nil;v108=131 -(48 + 82) ;end if (v108~=1) then else while true do if (v109~=(0 -0)) then else v110=v34();if (v30(v110,1 + 0 ,3 -2 )~=(369 -(289 + 80))) then else local v126=0 + 0 ;local v127;local v128;local v129;local v130;local v131;while true do if (v126~=0) then else v127=0;v128=nil;v126=673 -(550 + 122) ;end if (v126~=(1931 -(774 + 1156))) then else v129=nil;v130=nil;v126=2;end if (v126~=2) then else v131=nil;while true do if (v127==(1 + 1)) then while true do if (v128==(99 -(93 + 5))) then local v141=0 + 0 ;local v142;while true do if (v141~=(0 + 0)) then else v142=0 -0 ;while true do if (v142==0) then local v225=1007 -(87 + 920) ;local v226;while true do if (v225~=0) then else v226=999 -(482 + 517) ;while true do if (v226==(1 + 0)) then v142=2 -1 ;break;end if ((0 -0)~=v226) then else v131={v35(),v35(),nil,nil};if (v129==(707 -(679 + 28))) then local v284=345 -(344 + 1) ;local v285;local v286;while true do if (v284==(1123 -(332 + 790))) then while true do if (v285~=(0 + 0)) then else v286=0 -0 ;while true do if (v286==(0 -0)) then v131[829 -(473 + 353) ]=v35();v131[2 + 2 ]=v35();break;end end break;end end break;end if (v284~=(1447 -(1120 + 327))) then else v285=1959 -(7 + 1952) ;v286=nil;v284=2 -1 ;end end elseif (v129==(1408 -(1023 + 384))) then v131[535 -(450 + 82) ]=v36();elseif (v129==2) then v131[1223 -(577 + 643) ]=v36() -((1283 -(1018 + 263))^(8 + 8)) ;elseif (v129~=(534 -(234 + 297))) then else local v307=0;local v308;local v309;while true do if (v307~=1) then else while true do if (v308~=(439 -(428 + 11))) then else v309=0 -0 ;while true do if (v309==(805 -(535 + 270))) then v131[5 -2 ]=v36() -((2 + 0)^(1 + 15)) ;v131[1 + 3 ]=v35();break;end end break;end end break;end if (v307==0) then v308=0;v309=nil;v307=1 + 0 ;end end end v226=514 -(330 + 183) ;end end break;end end end if (v142==(1 + 0)) then v128=263 -(51 + 210) ;break;end end break;end end end if (v128~=3) then else if (v30(v130,13 -10 ,572 -(392 + 177) )==(2 -1)) then v131[4]=v69[v131[4]];end v64[v107]=v131;break;end if (v128==2) then local v144=0 -0 ;while true do if (v144==(0 + 0)) then local v213=0 -0 ;local v214;while true do if (v213==(0 + 0)) then v214=0 + 0 ;while true do if (v214~=(1105 -(465 + 639))) then else v144=1 + 0 ;break;end if (v214==(0 + 0)) then if (v30(v130,1 + 0 ,3 -2 )==1) then v131[6 -4 ]=v69[v131[1 + 1 ]];end if (v30(v130,2 -0 ,2)==(4 -3)) then v131[1 + 2 ]=v69[v131[1227 -(121 + 1103) ]];end v214=1;end end break;end end end if (v144==1) then v128=2 + 1 ;break;end end end if (v128==(0 -0)) then local v145=0;local v146;while true do if (v145==(0 -0)) then v146=0;while true do if (v146==(1 + 0)) then v128=1;break;end if (v146~=(220 -(82 + 138))) then else local v227=0 + 0 ;local v228;while true do if (v227~=(415 -(255 + 160))) then else v228=0 + 0 ;while true do if (v228==0) then local v283=1164 -(1088 + 76) ;while true do if (v283==(750 -(724 + 25))) then v228=1;break;end if (v283~=(1358 -(689 + 669))) then else v129=v30(v110,2 + 0 ,1985 -(426 + 1556) );v130=v30(v110,226 -(216 + 6) ,22 -16 );v283=2 -1 ;end end end if (v228==(1 + 0)) then v146=1 + 0 ;break;end end break;end end end end break;end end end end break;end if (v127==(148 -(20 + 127))) then v130=nil;v131=nil;v127=2;end if (v127==(0 + 0)) then v128=0 + 0 ;v129=nil;v127=1;end end break;end end end break;end end break;end end end for v111=1 + 0 ,v36() do v65[v111-1 ]=v42();end for v113=1,v36() do v66[v113]=v36();end return v67;end end break;end end end local function v43(v44,v45,v46)local v70=v44[1];local v71=v44[2];local v72=v44[3];return function(...)local v75=0;local v76;local v77;local v78;local v79;local v80;while true do if (3==v75) then A,B=v41(v12(v80));if  not A[1] then local v100=0;local v101;while true do if (v100==0) then v101=v44[4][v76] or "?" ;error("Script error at ["   .. v101   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end break;end if (v75==2) then v80=nil;v80=function()local v87=v70;local v88=v71;local v89=v72;local v90=v41;local v91={};local v92={};local v93={};for v102=(2660 -1345) -(469 + (2198 -(14 + 1338))) ,v79 do if ((v102>=v89) or (((1993 -(482 + 238)) + 144)>=(8491 -5400))) then v91[v102-v89 ]=v78[v102 + (90 -(87 + (128 -(98 + 28)))) ];else v93[v102]=v78[v102 + 1 + 0 ];end end local v94=(v79-v89) + 1 + 0 ;local v95;local v96;while true do local v103=0 -0 ;local v104;local v105;while true do if (((6059 -(203 + 355 + 800))>=(1651 -(281 + 1044))) and (v103==(0 + 0))) then v104=1432 -(811 + 621) ;v105=nil;v103=249 -(38 + 210) ;end if (((4165 + 758)==(24024 -19101)) and ((1 + 0)==v103)) then while true do if ((v104==(0 + (0 -0))) or ((2392 + 2137)<=(5487 -(707 + 1113)))) then v105=(1141 -(953 + 188)) -0 ;while true do if (((536 + 2530)>=(2957 -(99 + 321 + 69))) and (v105==0)) then local v132=0 -0 ;local v133;while true do if (((4156 -(109 + 114))<(59 + 27 + 4326)) and (v132==(0 -0))) then v133=0 + 0 ;while true do if (((832 + 240)<=(7268 -3706)) and (v133==(1 + 0))) then v105=2 -1 ;break;end if (((2999 -1492)<(2964 -(291 + 53))) and (v133==(0 -0))) then local v136=0 -(894 -(806 + 88)) ;while true do if (((856 + 776)<=(2146 + 949)) and ((0 + 0)==v136)) then v95=v87[v76];v96=v95[(3252 -(1097 + 493)) -(623 + 1038) ];v136=1;end if (((13303 -(10313 -(24 + 827)))>(118 + 2415)) and (v136==(3 -(2 + 0)))) then v133=1 -0 ;break;end end end end break;end end end if (((2106 -((3024 -(369 + 1561)) + 694))<(218 + 2090)) and (v105==(3 -2))) then if ((v96<=((469 -(43 + 360)) -52)) or (((4395 -(853 + 390)) + 536)>=(3095 + 1785))) then if (((1497 + 224)<(1101 + 1445)) and (v96<=(4 + 2))) then if ((v96<=(2 + 0)) or (((4796 -(1795 + 194)) -((1390 -(492 + 386)) + (1102 -(708 + 88))))==(3059 + 1789))) then if ((97<=(5354 -2944)) and (v96<=(0 -0))) then v93[v95[3 -1 ]]=v46[v95[12 -(1339 -(339 + 991)) ]];elseif (((5228 -(625 + 987))>(1045 + 961)) and (v96==(1 + (0 -0)))) then v93[v95[1353 -(1328 + 23) ]]=v95[3 + 0 + 0 ];elseif (((468 + 1253)<(852 + 1128)) and (v93[v95[5 -3 ]]~=v93[v95[1 + 3 ]])) then v76=v76 + 1 ;else v76=v95[(634 -(52 + 579)) + 0 + 0 ];end elseif ((v96<=(58 -(7 + 47))) or (4953<=(4736 -(56 + 1049)))) then if ((v96==(6 -3)) or ((131 + 3 + 363)>=(331 + (3722 -(140 + 520))))) then for v211=v95[3 -1 ],v95[2 + 1 ] do v93[v211]=nil;end else v93[v95[1234 -(994 + (1890 -(1642 + 10))) ]]=v93[v95[9 -6 ]];end elseif (((3455 -((2628 -1026) + 191))==(3148 -(757 + 729))) and (v96>(1240 -(255 + 980)))) then local v153=0;local v154;local v155;local v156;local v157;while true do if ((v153==(0 + 0 + 0)) or ((1289 + 108)>(4987 -((94 -62) + 8)))) then v154=1670 -(228 + 1442) ;v155=nil;v153=2 -1 ;end if (((3747 -((407 -183) + 39))>(642 -393)) and (v153==(1 + 0))) then v156=nil;v157=nil;v153=1707 -(676 + 1029) ;end if ((v153==(1 + 1)) or ((2174 -(30 + 1035))==(6916 -(8216 -4185)))) then while true do if (((3788 -2351)>=(823 -(463 + 225))) and (v154==(1 + 0))) then v157=v95[10 -7 ];for v252=144 -(46 + 97) ,v157 do v156[v252]=v93[v155 + v252 ];end break;end if (((2211 + 606)<=(13167 -8344)) and (v154==0)) then v155=v95[2 + 0 ];v156=v93[v155];v154=4 -3 ;end end break;end end elseif (((10805 -7337)<=(2931 + 1736)) and v93[v95[2]]) then v76=v76 + ((6 -3) -2) ;else v76=v95[2 + 1 ];end elseif ((v96<=(25 -15)) or (((1675 + 373) -(95 + 79))==(2643 + 1483))) then if (((13042 -(21420 -12735))==(3187 + 1170)) and (v96<=((1873 -(843 + 60)) -(793 + 169)))) then if ((v96==(3 + 4)) or ((25 + 3205)<=(889 -(17 + 20)))) then local v158=0;local v159;local v160;while true do if ((v158==(0 -0)) or ((1238 + 752 + 2101)<(1715 -((1921 -(1264 + 647)) + 662)))) then local v220=0 -0 ;while true do if ((v220==(0 + 0 + 0)) or ((409 + 743)>((8107 -(315 + 105)) -(5466 -2097)))) then v159=609 -(429 + 180) ;v160=nil;v220=1;end if (((8118 -6044)<4453) and (v220==(1 + 0))) then v158=1 -0 ;break;end end end if ((v158==(1 + 0)) or ((42 + 205)>(765 + 3715))) then while true do if ((v159==(0 + 0)) or ((412 -174)>(7360 -4403))) then v160=v95[677 -(479 + 196) ];v93[v160](v14(v93,v160 + (2 -1) ,v95[1 + 2 ]));break;end end break;end end else v93[v95[5 -3 ]]={};end elseif (((4958 -(160 + 765))==((3903 -(924 + 37)) + 1091)) and (v96==(8 + 1 + 0))) then local v162=1131 -(345 + 786) ;local v163;local v164;local v165;while true do if ((v162==(0 -0)) or ((4553 -(444 + 565))==(4679 -(503 + 457)))) then v163=1119 -(1040 + 79) ;v164=nil;v162=1;end if (((1 -0)==v162) or ((699 + 3509)<(3182 -(371 + 167)))) then v165=nil;while true do if (((1201 + 478)>(6 + 413)) and (v163==(0 -0))) then local v233=0 -(0 -0) ;while true do if ((v233==(1601 -(1387 + 213))) or (((366 + 764) -575)==(1458 + 3174))) then v163=2 -1 ;break;end if (((1204 -(648 + 556))==v233) or ((4582 -(101 + 1402))<=((5235 -(401 + 111)) -1993))) then v164=v95[5 -3 ];v165={};v233=1 + 0 ;end end end if ((v163==(830 -(418 + 411))) or ((4471 -(838 + 427))==(838 -(87 + 154)))) then for v255=1 -0 , #v92 do local v256=0 + 0 ;local v257;local v258;local v259;while true do if ((v256==(1 + 0)) or (((1119 -688) + 1133)>(16681 -12178))) then v259=nil;while true do if ((v257==(1 + 0)) or ((859 + 3510)<(1119 -211))) then while true do if ((v258==(0 -0)) or (2910==(808 + 2634))) then v259=v92[v255];for v300=0 -0 , #v259 do local v301=0 -0 ;local v302;local v303;local v304;local v305;local v306;while true do if (((1421 -(904 + 515))==v301) or (1693>((7311 -3984) + 562))) then v306=nil;while true do if ((v302==(1 + 0)) or (1845>=(11130 -6235))) then local v314=0 + 0 ;while true do if (((1448 + 359)==(159 + 1648)) and (v314==(4 -3))) then v302=531 -(387 + 142) ;break;end if ((((1685 + 1425) -(67 + 1448))>(5323 -3980)) and ((0 -(0 -0))==v314)) then v305=nil;v306=nil;v314=2 -1 ;end end end if ((v302==(0 + 0)) or (203>(313 + 570))) then v303=46 -(40 + 6) ;v304=nil;v302=1 + 0 ;end if ((v302==2) or ((1516 -483)<(1463 -1023))) then while true do if ((v303==(0 + 0)) or (((4587 -(301 + 33)) -(818 + 1043))<(2098 -(33 + 69)))) then local v315=0 -0 ;while true do if (((7211 -3757)>=(6445 -3372)) and (v315==((0 + 0) -0))) then local v320=0;while true do if (((0 -0)==v320) or ((3387 -(1007 + 699))>(2514 -(139 + 9)))) then v304=v259[v300];v305=v304[1];v320=1 + (0 -0) ;end if (((7109 -5053)<(8319 -5930)) and (v320==(1 + 0))) then v315=1 + 0 ;break;end end end if (((1489 -751)==(1431 -(678 + 15))) and (v315==(3 -2))) then v303=2 -1 ;break;end end end if (((3883 -(629 + 103))<(5353 -(744 + 534))) and (v303==(1 + 0))) then v306=v304[782 -(388 + 392) ];if (((v305==v93) and (v306>=v164)) or ((1780 + 2419)<((8951 + 7941) -12990))) then local v319=0 + 0 ;while true do if (((1618 + 239)<(1254 + 2375)) and (v319==(0 -0))) then v165[v306]=v305[v306];v304[421 -(175 + 110 + 135) ]=v165;break;end end end break;end end break;end end break;end if ((v301==(0 + 0)) or ((867 + 669)==(1770 + 530))) then v302=1066 -(691 + 375) ;v303=nil;v301=1636 -(1000 + 635) ;end if ((v301==(2 -1)) or (((32 -13) + 2231)<=(1021 -(38 + 19)))) then v304=nil;v305=nil;v301=1796 -(1748 + (1996 -(1365 + 585))) ;end end end break;end end break;end if (((4608 -2308)>(2286 -(1348 + 551))) and (v257==((2343 -1050) -(1216 + 77)))) then v258=1709 -(119 + 1590) ;v259=nil;v257=1222 -(661 + 560) ;end end break;end if ((v256==0) or ((2379 + 1738)<(356 + 1481))) then v257=1082 -(858 + 224) ;v258=nil;v256=1 + 0 ;end end end break;end end break;end end else v93[v95[1 + 1 ]][v95[3]]=v95[7 -3 ];end elseif ((v96<=((12 + 5) -5)) or ((2041 -(284 + 947))<=(91 + 294 + 418))) then if ((v96>(10 + 1)) or ((1704 + 466)<((1448 -(1249 + 82)) + 28))) then local v168=0 + (0 -0) ;local v169;local v170;while true do if ((v168==(1 -0)) or ((2253 + 1509)==(1547 + 1458))) then while true do if ((v169==(0 + 0)) or ((3724 -((1024 -545) + (848 -(176 + 127))))<(1391 -(551 + 802)))) then v170=v95[910 -((917 -382) + 373) ];v93[v170](v93[v170 + 1 + 0 ]);break;end end break;end if ((v168==(0 -0)) or ((6708 -((2780 -(1627 + 221)) + 920))==(1849 -(88 + 214)))) then v169=0 -0 ;v170=nil;v168=1 -0 ;end end else local v171=1588 -(176 + 55 + 1357) ;local v172;local v173;local v174;local v175;local v176;while true do if ((((2613 + 822) -((1208 -(833 + 290)) + 4 + 14))==(9338 -6006)) and (v171==(1236 -(888 + 348)))) then v172=0 -0 ;v173=nil;v171=1 + 0 ;end if (((5900 -1945)<(9120 -5146)) and (v171==(2 + 0))) then v176=nil;while true do if ((2331<(4314 -(1443 + 266))) and (v172==(1371 -(494 + 876)))) then local v235=0 -0 ;while true do if ((v235==(4 -3)) or ((5459 -(444 + 959))<(992 + 244))) then v172=1059 -(246 + 811) ;break;end if ((v235==(0 -0)) or ((2249 -(332 + 704))==(864 + 2553))) then v77=(v175 + v173) -(1 + 0) ;v176=0;v235=1 + 0 ;end end end if ((v172==(494 -(254 + (1373 -(317 + 818))))) or ((2183 + 1915)==(395 + 20))) then for v260=v173,v77 do local v261=0 -0 ;local v262;while true do if (((1228 + 371)<(1865 + 1891)) and (v261==(0 + 0))) then v262=1016 -(1010 + 6) ;while true do if ((v262==(0 + 0)) or ((6279 -(1321 + 549))>=4568)) then v176=v176 + (787 -(85 + 701)) ;v93[v260]=v174[v176];break;end end break;end end end break;end if (((166 + 163)<=(6809 -3832)) and (v172==(0 + 0))) then local v236=(0 -0) -0 ;while true do if ((v236==(1894 -(31 + 1863))) or ((6576 -(217 + 1746))==(571 + 1232))) then v173=v95[2];v174,v175=v90(v93[v173](v14(v93,v173 + 1 + (300 -(289 + 11)) ,v95[3 + 0 ])));v236=1 -0 ;end if (((260 + (10948 -7210))>(2526 -1313)) and ((1256 -(837 + 418))==v236)) then v172=1 + 0 + 0 ;break;end end end end break;end if ((v171==(458 -(398 + 59))) or ((1325 -(143 + 2))>=(8381 -3628))) then v174=nil;v175=nil;v171=8 -(1 + 5) ;end end end elseif (((12215 -(11634 -(770 + 1177)))==(41 + 2487)) and (v96==(1 + 0 + 12))) then local v177=1550 -(170 + 1380) ;local v178;while true do if ((v177==(0 -0)) or ((11 -4)>=(4378 -(195 + 676)))) then v178=v95[2];v93[v178]=v93[v178](v14(v93,v178 + (2 -1) ,v95[13 -10 ]));break;end end else local v179=0 + 0 ;local v180;local v181;local v182;while true do if (((4042 + 170)>(863 + (600 -288))) and (v179==(1 + 0))) then v182=nil;while true do if (((645 + 1023)==((3840 -(19 + 174)) -1979)) and (v180==(0 + 0))) then local v237=0 -0 ;while true do if ((((1174 + 446) -(700 + 736))<=(287 + 1618)) and (v237==(1459 -(1095 + 363)))) then v180=1850 -(40 + 1809) ;break;end if (((1797 -558)<=(2935 -688)) and ((1717 -(101 + 1616))==v237)) then v181=v95[1 + 1 ];v182=v93[v95[2 + 1 ]];v237=1 + 0 ;end end end if ((v180==(1 -0)) or ((3969 -2431)<(618 + 728 + 140))) then v93[v181 + (1207 -(504 + 702)) ]=v182;v93[v181]=v182[v95[10 -6 ]];break;end end break;end if ((v179==0) or ((107 -63)>=(2149 -(1233 + 147)))) then v180=1810 -(1441 + 369) ;v181=nil;v179=1977 -(404 + 1572) ;end end end elseif (((3390 -(683 + 276 + 368))==(7657 -5594)) and (v96<=(49 -28))) then if (((756 + 3899)>=(2546 -(988 -(114 + 172)))) and (v96<=(11 + 6))) then if (((1299 -350)<=(5201 -(124 + 499))) and (v96<=(66 -51))) then v93[v95[1657 -(1647 + 8) ]]();elseif (((5437 -(1167 + 118))>(10599 -(5734 + 1802))) and (v96==(1123 -(646 + 461)))) then if ((v95[1 + 1 ]==v93[v95[261 -(240 + 17) ]]) or (((1817 -(713 + 566)) -322)>(1104 + 48))) then v76=v76 + ((1531 -(302 + 1228)) -0) ;else v76=v95[1 + 2 ];end else do return;end end elseif (((1130 + 2793)==(5840 -(1700 + 217))) and (v96<=((729 -(573 + 149)) + (52 -40)))) then if ((v96==18) or (((6486 -2285) -(676 + 245))<((2910 -(108 + 35)) -1545))) then v76=v95[2 + 1 ];else v93[v95[2]]=v93[v95[1 + 2 ]][v95[8 -4 ]];end elseif ((3681<=(5758 -(1156 + 835))) and (v96>(886 -(554 + 312)))) then local v186=1748 -(406 + 1342) ;local v187;while true do if ((v186==((1713 -(266 + 1447)) + 0)) or ((1931 -(677 + 164))<=(1100 -533))) then v187=v95[2];v93[v187]=v93[v187]();break;end end else v93[v95[2 + 0 ]][v95[3]]=v93[v95[1 + 3 ]];end elseif ((v96<=(97 -72)) or ((989 + 2481)==(1192 + 2256))) then if ((v96<=((600 -299) -(55 + 223))) or ((3386 -(738 + 280))<=(861 + 1223))) then if (((1986 -(1680 + 51))==(241 + (31 -17))) and (v96==(15 + 7))) then local v190=141 -(132 + 9) ;local v191;local v192;while true do if (((4925 -2365)>(1306 -685)) and (v190==(0 -0))) then v191=1568 -(363 + 1205) ;v192=nil;v190=1 + 0 ;end if (((2 -1)==v190) or ((2982 -(502 + 694))==((3702 + 1530) -((3056 -1666) + 428)))) then while true do if (((1766 + 1883)>=(1590 -795)) and (v191==(0 + 0))) then v192=v95[1 + (1 -0) ];v93[v192]=v93[v192](v93[v192 + ((732 + 268) -(940 + 59)) ]);break;end end break;end end else v93[v95[1 + 1 ]]=v43(v88[v95[332 -(167 + 162) ]],nil,v46);end elseif (((4232 + 432)>=(4264 -2484)) and (v96==(1144 -(19 + 1101)))) then local v194=0 + 0 ;local v195;local v196;local v197;while true do if (((487 -(260 + 226))==v194) or ((1367 -(103 + 15))==(52 + 625))) then v197=nil;while true do if (((164 + 344)==(1150 -642)) and (v195==(0 -0))) then v196=v95[2];v197=v93[v196];v195=1;end if ((v195==(2 -1)) or ((3220 + 459)==((462 -339) + 1 + 4))) then for v263=v196 + ((1339 + 552) -(570 + 1320)) ,v95[(400 -(136 + 258)) -3 ] do v8(v197,v93[v263]);end break;end end break;end if ((v194==(0 + 0)) or ((5793 -(768 + 365))<=(2447 + 1012))) then v195=1552 -(76 + 1476) ;v196=nil;v194=1 + 0 ;end end else v93[v95[(1729 -(728 + 355)) -(72 + 272 + 300) ]]=v45[v95[1 + 2 ]];end elseif ((1082<=(21940 -17051)) and (v96<=(46 -19))) then if (((11177 -6798)<=(4956 -((965 -664) + 190))) and (v96==((6732 -5112) -(567 + 1027)))) then local v200=0 -0 ;local v201;local v202;while true do if ((v200==(4 -3)) or ((9604 -(14141 -6948))<(1740 + 333))) then while true do if (((94 -28)<(437 -242)) and (v201==((116 + 389) -(370 + 135)))) then v202=v95[2 + 0 ];v93[v202]=v93[v202](v14(v93,v202 + (2 -1) ,v77));break;end end break;end if ((v200==(0 + 0)) or ((5290 -(261 + (211 -(9 + 2))))<=(2533 + 2154))) then v201=1800 -((2038 -634) + (615 -219)) ;v202=nil;v200=2 -1 ;end end else local v203=0 -0 ;local v204;local v205;local v206;local v207;while true do if (((1980 -(1492 + 488))==v203) or ((3146 -(1238 + 600))<=(408 + 233))) then v204=0 + 0 ;v205=nil;v203=3 -2 ;end if (((475 + 3711)>(1631 -1060)) and (v203==(2 + 0))) then while true do if ((((36131 -24784) -7477)>(1651 -515)) and (v204==(1 + 0))) then v207={};v206=v11({},{__index=function(v247,v248)local v264=1496 -(23 + 1473) ;local v265;while true do if ((v264==0) or ((340 + 1995)<=((9672 -5792) -2630))) then local v282=0 -0 ;while true do if (((10700 -6807)==(11119 -7226)) and (v282==(0 + 0))) then v265=v207[v248];return v265[1149 -(375 + 773) ][v265[7 -5 ]];end end end end end,__newindex=function(v247,v248,v249)local v266=(1304 -569) -(427 + 308) ;local v267;local v268;while true do if ((v266==(1 -0)) or ((1377 -(240 + 48))>=(1119 + 3359))) then while true do if ((v267==(0 -0)) or ((142 + 175)>=(6907 -4201))) then v268=v207[v248];v268[(69 -(50 + 18)) + (1236 -(241 + 995)) ][v268[(5 -3) + 0 ]]=v249;break;end end break;end if ((((235 -(204 + 31)) + 0)==v266) or ((2187 -(13 + 446))==(8551 -(2962 + 2064)))) then v267=0 -0 ;v268=nil;v266=1 + 0 ;end end end});v204=221 -(88 + 131) ;end if (((9212 -5105)>=(1241 -(57 + 280))) and (v204==(1148 -(641 + 507)))) then local v250=0 -0 ;while true do if (((10175 -5541)>=(232 + 1552)) and (v250==(2 -1))) then v204=1 -0 ;break;end if (((4861 -(550 + 361))==(5370 -(463 + 957))) and (v250==((0 + 0) -0))) then v205=v88[v95[3 -0 ]];v206=nil;v250=1 + 0 ;end end end if ((((346 + 1246) -(785 + 444))<=(9368 -6348)) and (v204==(2 + 0))) then for v269=1 + 0 ,v95[4 + 0 ] do local v270=0 -0 ;local v271;local v272;while true do if (((1584 -(345 + 1238))==v270) or ((842 -(20 + 2))==(1856 -(398 + 685)))) then while true do if (((253 + 307)<(5150 -(277 + 1224))) and (v271==((0 + 0) -0))) then local v292=0 -0 ;local v293;while true do if ((v292==(0 + 0)) or ((5098 -(281 + 992))<=(444 -(273 + 33)))) then v293=0 -(0 -0) ;while true do if (((93 + 300 + 3534)==(5652 -(1290 + 435))) and (v293==(3 -2))) then v271=1325 -(553 + 771) ;break;end if (((1988 -(1403 + 211 + 366))==(422 -(395 + (960 -(259 + 682))))) and (v293==(0 -0))) then local v310=1648 -(971 + 677) ;while true do if (((3161 -(79 + 1814))==(2394 -1126)) and (((0 + 0) -0)==v310)) then v76=v76 + (740 -(56 + 683)) ;v272=v87[v76];v310=1 + 0 ;end if (((451 + 3062)<=((3546 + 1341) -(1284 + 76))) and (v310==((1 -0) + 0 + 0))) then v293=2 -1 ;break;end end end end break;end end end if ((3757<((21136 -15712) -1402)) and (v271==(1 -0))) then if ((v272[1 + 0 + 0 ]==(1212 -((1761 -787) + 234))) or ((5776 -((1965 -1342) + 380))<=(1894 -(505 + 1130)))) then v207[v269-(3 -2) ]={v93,v272[(54 + 11) -(9 + 53) ]};else v207[v269-(3 -2) ]={v45,v272[7 -4 ]};end v92[ #v92 + (2 -(1 + 0)) ]=v207;break;end end break;end if ((v270==(0 + 0)) or ((5695 -(262 + 1639))==(2245 -(493 + 513)))) then v271=35 -(27 + 8) ;v272=nil;v270=352 -(17 + 334) ;end end end v93[v95[(12 -7) -3 ]]=v43(v205,v206,v46);break;end end break;end if (((1054 + (6023 -4678))<=(13538 -8707)) and (v203==(1514 -(285 + 1228)))) then v206=nil;v207=nil;v203=2;end end end elseif (((8654 -5813)<=(5325 -(198 + 574))) and (v96>(1775 -(1035 + 712)))) then if ((v93[v95[(621 + 116) -(91 + 644) ]]==v95[512 -(31 + 477) ]) or ((5158 -(586 + 625))<=(17076 -13238))) then v76=v76 + ((1368 + 631) -(14 + 1984)) ;else v76=v95[818 -(717 + 98) ];end else v93[v95[809 -(135 + 672) ]]=v95[3 + 0 ]~=((1789 + 35) -(1243 + 581)) ;end v76=v76 + (2 -1) ;break;end end break;end end break;end end end end;v75=3;end if (0==v75) then v76=1;v77= -1;v75=1;end if (v75==1) then v78={...};v79=v13("#",...) -1 ;v75=2;end end end;end return v43(v42(),{},v19)(...);end;vv10(),...);break;end if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end
